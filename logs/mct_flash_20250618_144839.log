Running load_mct.py
Installing required packages...
=== Install esptool ===
Command: pip install "git+https://github.com/espressif/esptool.git@a32988e2d5f02845ce16e22022f5b64368f12572#egg=esptool"
Output:
Collecting esptool
  Using cached esptool-4.8.1-py3-none-any.whl
Requirement already satisfied: bitstring!=4.2.0,>=3.1.6 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (4.3.1)
Requirement already satisfied: cryptography>=2.1.4 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (45.0.4)
Requirement already satisfied: ecdsa>=0.16.0 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (0.19.1)
Requirement already satisfied: pyserial>=3.3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (3.5)
Requirement already satisfied: reedsolo<1.8,>=1.5.3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (1.7.0)
Requirement already satisfied: PyYAML>=5.1 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (6.0.2)
Requirement already satisfied: intelhex in /opt/homebrew/lib/python3.11/site-packages (from esptool) (2.3.0)
Requirement already satisfied: argcomplete>=3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (3.6.2)
Requirement already satisfied: bitarray<4.0,>=3.0.0 in /opt/homebrew/lib/python3.11/site-packages (from bitstring!=4.2.0,>=3.1.6->esptool) (3.4.2)
Requirement already satisfied: cffi>=1.14 in /opt/homebrew/lib/python3.11/site-packages (from cryptography>=2.1.4->esptool) (1.17.1)
Requirement already satisfied: six>=1.9.0 in /opt/homebrew/lib/python3.11/site-packages (from ecdsa>=0.16.0->esptool) (1.17.0)
Requirement already satisfied: pycparser in /opt/homebrew/lib/python3.11/site-packages (from cffi>=1.14->cryptography>=2.1.4->esptool) (2.22)

[notice] A new release of pip is available: 25.0.1 -> 25.1.1
[notice] To update, run: python3.11 -m pip install --upgrade pip

===================
=== Install mpremote ===
Command: pip install mpremote
Output:
Requirement already satisfied: mpremote in /opt/homebrew/lib/python3.11/site-packages (1.25.0)
Requirement already satisfied: pyserial>=3.3 in /opt/homebrew/lib/python3.11/site-packages (from mpremote) (3.5)

[notice] A new release of pip is available: 25.0.1 -> 25.1.1
[notice] To update, run: python3.11 -m pip install --upgrade pip

===================
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 d83bda4d29500000 303a:4001 Espressif Systems Espressif Device

===================
mpremote devs output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 d83bda4d29500000 303a:4001 Espressif Systems Espressif Device

Attempting to reset device into bootloader mode...
=== Reset Device ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --before default_reset --after no_reset chip_id
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Traceback (most recent call last):
  File "/opt/homebrew/bin/esptool.py", line 37, in <module>
    esptool._main()
  File "/opt/homebrew/lib/python3.11/site-packages/esptool/__init__.py", line 1349, in _main
    main()
  File "/opt/homebrew/lib/python3.11/site-packages/esptool/__init__.py", line 815, in main
    esp = esp or get_default_connected_device(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/esptool/__init__.py", line 1234, in get_default_connected_device
    _esp.connect(before, connect_attempts)
  File "/opt/homebrew/lib/python3.11/site-packages/esptool/loader.py", line 726, in connect
    last_error = self._connect_attempt(reset_strategy, mode)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/esptool/loader.py", line 605, in _connect_attempt
    waiting = self._port.inWaiting()
              ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/serial/serialutil.py", line 594, in inWaiting
    return self.in_waiting
           ^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/serial/serialposix.py", line 549, in in_waiting
    s = fcntl.ioctl(self.fd, TIOCINQ, TIOCM_zero_str)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: [Errno 6] Device not configured

===================
=== Check Device Info After Reset ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Found Espressif device on port: /dev/cu.usbmodem1101
=== Get MAC Address ===
Command: esptool.py --port "/dev/cu.usbmodem1101" chip_id
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Detecting chip type... ESP32-S3
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Warning: ESP32-S3 has no Chip ID. Reading MAC instead.
MAC: d8:3b:da:4d:29:50
Hard resetting via RTS pin...

===================
Device MAC address: d8:3b:da:4d:29:50
Flashing firmware...
=== Erase Flash ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --baud 921600 --before default_reset --after hard_reset erase_flash
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Erasing flash (this may take a while)...
Chip erase completed successfully in 15.7 seconds.
Hard resetting via RTS pin...

===================
=== Write Flash ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m 0x0 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/bootloader.bin" 0x8000 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/partition-table.bin" 0x20000 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/micropython.bin"
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00004fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00020000 to 0x00300fff...
SHA digest in image updated
Compressed 19152 bytes to 12453...
Writing at 0x00000000... (100 %)
Wrote 19152 bytes (12453 compressed) at 0x00000000 in 0.2 seconds (effective 712.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 139...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (139 compressed) at 0x00008000 in 0.0 seconds (effective 599.7 kbit/s)...
Hash of data verified.
Compressed 3017824 bytes to 1787685...
Writing at 0x00020000... (0 %)
Writing at 0x0002a850... (1 %)
Writing at 0x000332f4... (2 %)
Writing at 0x0003b001... (3 %)
Writing at 0x000407da... (4 %)
Writing at 0x00049688... (5 %)
Writing at 0x00055e6c... (6 %)
Writing at 0x00062b3c... (7 %)
Writing at 0x0006e1e9... (8 %)
Writing at 0x00079598... (9 %)
Writing at 0x000858f2... (10 %)
Writing at 0x0008bdfc... (10 %)
Writing at 0x00092ed3... (11 %)
Writing at 0x00099123... (12 %)
Writing at 0x0009f689... (13 %)
Writing at 0x000a4e45... (14 %)
Writing at 0x000aa69b... (15 %)
Writing at 0x000b0b0c... (16 %)
Writing at 0x000b791f... (17 %)
Writing at 0x000be0e8... (18 %)
Writing at 0x000c5b09... (19 %)
Writing at 0x000ccc6e... (20 %)
Writing at 0x000d36ab... (20 %)
Writing at 0x000da0a5... (21 %)
Writing at 0x000e05f0... (22 %)
Writing at 0x000e6d79... (23 %)
Writing at 0x000ed8db... (24 %)
Writing at 0x000f373b... (25 %)
Writing at 0x000fb2f7... (26 %)
Writing at 0x000fffc1... (27 %)
Writing at 0x0010834c... (28 %)
Writing at 0x0011194f... (29 %)
Writing at 0x0011ac9c... (30 %)
Writing at 0x0012744e... (30 %)
Writing at 0x0013420e... (31 %)
Writing at 0x0013cad4... (32 %)
Writing at 0x0014547e... (33 %)
Writing at 0x0014efe1... (34 %)
Writing at 0x0015a413... (35 %)
Writing at 0x00162b80... (36 %)
Writing at 0x0016aab9... (37 %)
Writing at 0x00173272... (38 %)
Writing at 0x0017b723... (39 %)
Writing at 0x0018399b... (40 %)
Writing at 0x0018c332... (40 %)
Writing at 0x0019523e... (41 %)
Writing at 0x0019d326... (42 %)
Writing at 0x001a5570... (43 %)
Writing at 0x001ad4dd... (44 %)
Writing at 0x001b5259... (45 %)
Writing at 0x001badc9... (46 %)
Writing at 0x001c07fd... (47 %)
Writing at 0x001c5b33... (48 %)
Writing at 0x001cae66... (49 %)
Writing at 0x001d022c... (50 %)
Writing at 0x001d568a... (50 %)
Writing at 0x001dae71... (51 %)
Writing at 0x001e03ef... (52 %)
Writing at 0x001e57b1... (53 %)
Writing at 0x001ea9c0... (54 %)
Writing at 0x001efdbf... (55 %)
Writing at 0x001f5220... (56 %)
Writing at 0x001fa02c... (57 %)
Writing at 0x001ff00a... (58 %)
Writing at 0x00204402... (59 %)
Writing at 0x0020ae77... (60 %)
Writing at 0x00210c39... (60 %)
Writing at 0x002169bd... (61 %)
Writing at 0x0021bd6c... (62 %)
Writing at 0x00220e05... (63 %)
Writing at 0x00226ce3... (64 %)
Writing at 0x0022ccd1... (65 %)
Writing at 0x00232414... (66 %)
Writing at 0x00237dab... (67 %)
Writing at 0x0023d616... (68 %)
Writing at 0x002430ad... (69 %)
Writing at 0x00248dba... (70 %)
Writing at 0x0024deb5... (70 %)
Writing at 0x00254778... (71 %)
Writing at 0x0025a271... (72 %)
Writing at 0x0025f9c9... (73 %)
Writing at 0x0026551a... (74 %)
Writing at 0x0026b375... (75 %)
Writing at 0x00270790... (76 %)
Writing at 0x002757ab... (77 %)
Writing at 0x0027ac69... (78 %)
Writing at 0x00280453... (79 %)
Writing at 0x002857f2... (80 %)
Writing at 0x0028b19a... (80 %)
Writing at 0x0028ff4c... (81 %)
Writing at 0x00294f0a... (82 %)
Writing at 0x0029a2a5... (83 %)
Writing at 0x0029f7c9... (84 %)
Writing at 0x002a4818... (85 %)
Writing at 0x002a9ac3... (86 %)
Writing at 0x002af8bd... (87 %)
Writing at 0x002b4e71... (88 %)
Writing at 0x002b9fd3... (89 %)
Writing at 0x002bf03c... (90 %)
Writing at 0x002c469f... (90 %)
Writing at 0x002ca822... (91 %)
Writing at 0x002cfd18... (92 %)
Writing at 0x002d614c... (93 %)
Writing at 0x002db24d... (94 %)
Writing at 0x002e09d9... (95 %)
Writing at 0x002e8bf6... (96 %)
Writing at 0x002ee293... (97 %)
Writing at 0x002f38e2... (98 %)
Writing at 0x002f9810... (99 %)
Writing at 0x002fffba... (100 %)
Wrote 3017824 bytes (1787685 compressed) at 0x00020000 in 18.5 seconds (effective 1301.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...

===================
Waiting for device to boot into MicroPython...
=== Run flashed firmware ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" run
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...

A serial exception error occurred: Could not configure port: (6, 'Device not configured')
Note: This error originates from pySerial. It is likely not a problem with esptool, but with the hardware connection or drivers.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html

===================
Waiting for REPL port (attempt 1/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 2/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 3/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 4/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 5/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 6/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 7/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 8/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 9/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 10/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
REPL port not detected automatically; script will still attempt mpremote without explicit port.
Firmware flashed successfully.
Checking MicroPython REPL access…
=== Check REPL ===
Command: mpremote exec "print('OK')"
Output:
b''
Traceback (most recent call last):
  File "/opt/homebrew/bin/mpremote", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/main.py", line 569, in main
    handler_func(state, args)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/commands.py", line 448, in do_exec
    _do_execbuffer(state, args.expr[0], args.follow)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/commands.py", line 431, in _do_execbuffer
    state.ensure_raw_repl()
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/main.py", line 511, in ensure_raw_repl
    self.transport.enter_raw_repl(soft_reset=soft_reset)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/transport_serial.py", line 159, in enter_raw_repl
    raise TransportError("could not enter raw repl")
mpremote.transport.TransportError: could not enter raw repl

===================
Failed to access MicroPython REPL.
