Running load_mct.py
Installing required packages...
=== Install esptool ===
Command: pip install --upgrade esptool
Output:
Requirement already satisfied: esptool in /opt/homebrew/lib/python3.11/site-packages (4.9.0)
Requirement already satisfied: bitstring!=4.2.0,>=3.1.6 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (4.3.1)
Requirement already satisfied: cryptography>=2.1.4 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (45.0.4)
Requirement already satisfied: ecdsa>=0.16.0 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (0.19.1)
Requirement already satisfied: pyserial>=3.3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (3.5)
Requirement already satisfied: reedsolo<1.8,>=1.5.3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (1.7.0)
Requirement already satisfied: PyYAML>=5.1 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (6.0.2)
Requirement already satisfied: intelhex in /opt/homebrew/lib/python3.11/site-packages (from esptool) (2.3.0)
Requirement already satisfied: argcomplete>=3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (3.6.2)
Requirement already satisfied: bitarray<4.0,>=3.0.0 in /opt/homebrew/lib/python3.11/site-packages (from bitstring!=4.2.0,>=3.1.6->esptool) (3.4.2)
Requirement already satisfied: cffi>=1.14 in /opt/homebrew/lib/python3.11/site-packages (from cryptography>=2.1.4->esptool) (1.17.1)
Requirement already satisfied: six>=1.9.0 in /opt/homebrew/lib/python3.11/site-packages (from ecdsa>=0.16.0->esptool) (1.17.0)
Requirement already satisfied: pycparser in /opt/homebrew/lib/python3.11/site-packages (from cffi>=1.14->cryptography>=2.1.4->esptool) (2.22)

[notice] A new release of pip is available: 25.0.1 -> 25.1.1
[notice] To update, run: python3.11 -m pip install --upgrade pip

===================
=== Install mpremote ===
Command: pip install mpremote
Output:
Requirement already satisfied: mpremote in /opt/homebrew/lib/python3.11/site-packages (1.25.0)
Requirement already satisfied: pyserial>=3.3 in /opt/homebrew/lib/python3.11/site-packages (from mpremote) (3.5)

[notice] A new release of pip is available: 25.0.1 -> 25.1.1
[notice] To update, run: python3.11 -m pip install --upgrade pip

===================
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
mpremote devs output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

Found device in bootloader mode on port: /dev/cu.usbmodem1101
=== Get MAC Address ===
Command: esptool.py --port "/dev/cu.usbmodem1101" chip_id
Output:
esptool.py v4.9.0
Serial port /dev/cu.usbmodem1101
Connecting...
Detecting chip type... ESP32-S3
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Warning: ESP32-S3 has no Chip ID. Reading MAC instead.
MAC: d8:3b:da:4d:29:50
Hard resetting via RTS pin...

===================
Device MAC address: d8:3b:da:4d:29:50
Flashing firmware...
=== Erase Flash ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --baud 115200 --before default_reset --after watchdog_reset erase_flash
Output:
esptool.py v4.9.0
Serial port /dev/cu.usbmodem1101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Erasing flash (this may take a while)...
Chip erase completed successfully in 18.7 seconds.
Hard resetting with a watchdog...

===================
=== Write Flash ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --baud 115200 --before default_reset --after watchdog_reset write_flash -z 0x0 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/bootloader.bin" 0x8000 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/partition-table.bin" 0x20000 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/micropython.bin"
Output:
esptool.py v4.9.0
Serial port /dev/cu.usbmodem1101
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00004fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00020000 to 0x00304fff...
Compressed 19152 bytes to 12450...
Writing at 0x00000000... (100 %)
Wrote 19152 bytes (12450 compressed) at 0x00000000 in 0.2 seconds (effective 773.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 139...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (139 compressed) at 0x00008000 in 0.0 seconds (effective 1073.2 kbit/s)...
Hash of data verified.
Compressed 3032560 bytes to 1793418...
Writing at 0x00020000... (0 %)
Writing at 0x0002a854... (1 %)
Writing at 0x000332f3... (2 %)
Writing at 0x0003b001... (3 %)
Writing at 0x000407d9... (4 %)
Writing at 0x00049686... (5 %)
Writing at 0x00055e58... (6 %)
Writing at 0x00062d3f... (7 %)
Writing at 0x0006e3dc... (8 %)
Writing at 0x00079ec9... (9 %)
Writing at 0x00086413... (10 %)
Writing at 0x0008d366... (10 %)
Writing at 0x00093cf6... (11 %)
Writing at 0x0009a297... (12 %)
Writing at 0x000a0846... (13 %)
Writing at 0x000a6286... (14 %)
Writing at 0x000aba48... (15 %)
Writing at 0x000b1501... (16 %)
Writing at 0x000b858c... (17 %)
Writing at 0x000bf171... (18 %)
Writing at 0x000c6a6d... (19 %)
Writing at 0x000cddb5... (20 %)
Writing at 0x000d49c2... (20 %)
Writing at 0x000db4dd... (21 %)
Writing at 0x000e1a15... (22 %)
Writing at 0x000e81cb... (23 %)
Writing at 0x000eecb1... (24 %)
Writing at 0x000f4f96... (25 %)
Writing at 0x000fc3b1... (26 %)
Writing at 0x0010132f... (27 %)
Writing at 0x00109024... (28 %)
Writing at 0x00112160... (29 %)
Writing at 0x0011b13d... (30 %)
Writing at 0x001208a0... (30 %)
Writing at 0x00129433... (31 %)
Writing at 0x0013586f... (32 %)
Writing at 0x00142aef... (33 %)
Writing at 0x0014b62d... (34 %)
Writing at 0x00153f01... (35 %)
Writing at 0x0015d433... (36 %)
Writing at 0x00168faf... (37 %)
Writing at 0x001715b6... (38 %)
Writing at 0x001798fb... (39 %)
Writing at 0x00181575... (40 %)
Writing at 0x0018a74d... (40 %)
Writing at 0x00192250... (41 %)
Writing at 0x0019ae43... (42 %)
Writing at 0x001a3aff... (43 %)
Writing at 0x001ac0a5... (44 %)
Writing at 0x001b42bf... (45 %)
Writing at 0x001bbfbd... (46 %)
Writing at 0x001c3fe9... (47 %)
Writing at 0x001ca074... (48 %)
Writing at 0x001cfa59... (49 %)
Writing at 0x001d4e39... (50 %)
Writing at 0x001da1fb... (50 %)
Writing at 0x001df555... (51 %)
Writing at 0x001e486b... (52 %)
Writing at 0x001ea07e... (53 %)
Writing at 0x001ef606... (54 %)
Writing at 0x001f4a47... (55 %)
Writing at 0x001f9c48... (56 %)
Writing at 0x001feebb... (57 %)
Writing at 0x00204372... (58 %)
Writing at 0x002092b6... (59 %)
Writing at 0x0020e231... (60 %)
Writing at 0x002136bf... (60 %)
Writing at 0x0021a017... (61 %)
Writing at 0x0021fb97... (62 %)
Writing at 0x00225d8a... (63 %)
Writing at 0x0022b069... (64 %)
Writing at 0x002300c5... (65 %)
Writing at 0x00235f75... (66 %)
Writing at 0x0023bff5... (67 %)
Writing at 0x00241703... (68 %)
Writing at 0x00246ef2... (69 %)
Writing at 0x0024c906... (70 %)
Writing at 0x00252305... (70 %)
Writing at 0x00257ddd... (71 %)
Writing at 0x0025d1ae... (72 %)
Writing at 0x00263a44... (73 %)
Writing at 0x00269454... (74 %)
Writing at 0x0026eac4... (75 %)
Writing at 0x00274799... (76 %)
Writing at 0x0027a1fd... (77 %)
Writing at 0x0027f974... (78 %)
Writing at 0x00284a9d... (79 %)
Writing at 0x00289feb... (80 %)
Writing at 0x0028f61c... (80 %)
Writing at 0x00294a97... (81 %)
Writing at 0x0029a479... (82 %)
Writing at 0x0029f2d7... (83 %)
Writing at 0x002a41fc... (84 %)
Writing at 0x002a95d6... (85 %)
Writing at 0x002aea60... (86 %)
Writing at 0x002b3bd9... (87 %)
Writing at 0x002b8dd0... (88 %)
Writing at 0x002be61d... (89 %)
Writing at 0x002c4191... (90 %)
Writing at 0x002c9283... (90 %)
Writing at 0x002ce3de... (91 %)
Writing at 0x002d39bf... (92 %)
Writing at 0x002d99a6... (93 %)
Writing at 0x002df04b... (94 %)
Writing at 0x002e536f... (95 %)
Writing at 0x002ea62e... (96 %)
Writing at 0x002efdc4... (97 %)
Writing at 0x002f5312... (98 %)
Writing at 0x002fb386... (99 %)
Writing at 0x0030172e... (100 %)
Wrote 3032560 bytes (1793418 compressed) at 0x00020000 in 18.1 seconds (effective 1338.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting with a watchdog...

===================
Waiting for device to boot into MicroPython...
=== Run flashed firmware ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" run
Output:
esptool.py v4.9.0
Serial port /dev/cu.usbmodem1101
Connecting...

A serial exception error occurred: Could not configure port: (6, 'Device not configured')
Note: This error originates from pySerial. It is likely not a problem with esptool, but with the hardware connection or drivers.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html

===================
Waiting for REPL port (attempt 1/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 2/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 3/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 4/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 5/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 6/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 7/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 8/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 9/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 10/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
REPL port not detected automatically; script will still attempt mpremote without explicit port.
Firmware flashed successfully.
Checking MicroPython REPL access…
=== Check REPL ===
Command: mpremote exec "print('OK')"
Output:
b''
Traceback (most recent call last):
  File "/opt/homebrew/bin/mpremote", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/main.py", line 569, in main
    handler_func(state, args)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/commands.py", line 448, in do_exec
    _do_execbuffer(state, args.expr[0], args.follow)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/commands.py", line 431, in _do_execbuffer
    state.ensure_raw_repl()
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/main.py", line 511, in ensure_raw_repl
    self.transport.enter_raw_repl(soft_reset=soft_reset)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/transport_serial.py", line 159, in enter_raw_repl
    raise TransportError("could not enter raw repl")
mpremote.transport.TransportError: could not enter raw repl

===================
============================================================
DEVICE MUST BE IN BOOTLOADER MODE!
============================================================
This script requires the device to be in bootloader mode.
We need to see: 303a:1001 Espressif USB JTAG/serial debug unit

To put the device in bootloader mode:
1. Locate the BOOT and EN (or RST) buttons on your MCT device
2. Hold down the BOOT button and keep it pressed
3. While holding BOOT, press and release the EN (or RST) button
4. Release the BOOT button
5. The device should now show as 303a:1001 in bootloader mode

After putting the device in bootloader mode, run this script again.
You can verify bootloader mode with: mpremote devs
============================================================
