Running load_mct.py
Installing required packages...
=== Install esptool ===
Command: pip install --upgrade esptool
Output:
Requirement already satisfied: esptool in /opt/homebrew/lib/python3.11/site-packages (4.9.0)
Requirement already satisfied: bitstring!=4.2.0,>=3.1.6 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (4.3.1)
Requirement already satisfied: cryptography>=2.1.4 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (45.0.4)
Requirement already satisfied: ecdsa>=0.16.0 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (0.19.1)
Requirement already satisfied: pyserial>=3.3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (3.5)
Requirement already satisfied: reedsolo<1.8,>=1.5.3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (1.7.0)
Requirement already satisfied: PyYAML>=5.1 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (6.0.2)
Requirement already satisfied: intelhex in /opt/homebrew/lib/python3.11/site-packages (from esptool) (2.3.0)
Requirement already satisfied: argcomplete>=3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (3.6.2)
Requirement already satisfied: bitarray<4.0,>=3.0.0 in /opt/homebrew/lib/python3.11/site-packages (from bitstring!=4.2.0,>=3.1.6->esptool) (3.4.2)
Requirement already satisfied: cffi>=1.14 in /opt/homebrew/lib/python3.11/site-packages (from cryptography>=2.1.4->esptool) (1.17.1)
Requirement already satisfied: six>=1.9.0 in /opt/homebrew/lib/python3.11/site-packages (from ecdsa>=0.16.0->esptool) (1.17.0)
Requirement already satisfied: pycparser in /opt/homebrew/lib/python3.11/site-packages (from cffi>=1.14->cryptography>=2.1.4->esptool) (2.22)

[notice] A new release of pip is available: 25.0.1 -> 25.1.1
[notice] To update, run: python3.11 -m pip install --upgrade pip

===================
=== Install mpremote ===
Command: pip install mpremote
Output:
Requirement already satisfied: mpremote in /opt/homebrew/lib/python3.11/site-packages (1.25.0)
Requirement already satisfied: pyserial>=3.3 in /opt/homebrew/lib/python3.11/site-packages (from mpremote) (3.5)

[notice] A new release of pip is available: 25.0.1 -> 25.1.1
[notice] To update, run: python3.11 -m pip install --upgrade pip

===================
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
mpremote devs output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

Found device in bootloader mode on port: /dev/cu.usbmodem1101
=== Get MAC Address ===
Command: esptool.py --port "/dev/cu.usbmodem1101" chip_id
Output:
esptool.py v4.9.0
Serial port /dev/cu.usbmodem1101
Connecting...
Detecting chip type... ESP32-S3
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Warning: ESP32-S3 has no Chip ID. Reading MAC instead.
MAC: d8:3b:da:4d:29:50
Hard resetting via RTS pin...

===================
Device MAC address: d8:3b:da:4d:29:50
Flashing firmware...
=== Erase Flash ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --baud 115200 --before default_reset --after watchdog_reset erase_flash
Output:
esptool.py v4.9.0
Serial port /dev/cu.usbmodem1101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Erasing flash (this may take a while)...
Chip erase completed successfully in 2.5 seconds.
Hard resetting with a watchdog...

===================
=== Write Flash ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --baud 115200 --before default_reset --after watchdog_reset write_flash -z 0x0 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/bootloader.bin" 0x8000 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/partition-table.bin" 0x20000 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/micropython.bin"
Output:
esptool.py v4.9.0
Serial port /dev/cu.usbmodem1101
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00004fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00020000 to 0x00303fff...
Compressed 19152 bytes to 12452...
Writing at 0x00000000... (100 %)
Wrote 19152 bytes (12452 compressed) at 0x00000000 in 0.2 seconds (effective 783.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 139...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (139 compressed) at 0x00008000 in 0.0 seconds (effective 1085.3 kbit/s)...
Hash of data verified.
Compressed 3030864 bytes to 1792765...
Writing at 0x00020000... (0 %)
Writing at 0x0002a861... (1 %)
Writing at 0x000332f5... (2 %)
Writing at 0x0003b005... (3 %)
Writing at 0x000407dd... (4 %)
Writing at 0x00049685... (5 %)
Writing at 0x00055e50... (6 %)
Writing at 0x00062ca2... (7 %)
Writing at 0x0006e429... (8 %)
Writing at 0x00079d66... (9 %)
Writing at 0x000860c9... (10 %)
Writing at 0x0008cf3c... (10 %)
Writing at 0x00093955... (11 %)
Writing at 0x00099f02... (12 %)
Writing at 0x000a04b0... (13 %)
Writing at 0x000a5edf... (14 %)
Writing at 0x000ab6d0... (15 %)
Writing at 0x000b1674... (16 %)
Writing at 0x000b8316... (17 %)
Writing at 0x000beea8... (18 %)
Writing at 0x000c67e1... (19 %)
Writing at 0x000cdc1a... (20 %)
Writing at 0x000d46f5... (20 %)
Writing at 0x000db218... (21 %)
Writing at 0x000e17f9... (22 %)
Writing at 0x000e7f37... (23 %)
Writing at 0x000eea30... (24 %)
Writing at 0x000f4cac... (25 %)
Writing at 0x000fc290... (26 %)
Writing at 0x00100ee8... (27 %)
Writing at 0x00108f5a... (28 %)
Writing at 0x00112371... (29 %)
Writing at 0x0011ae0e... (30 %)
Writing at 0x001203fc... (30 %)
Writing at 0x00128d86... (31 %)
Writing at 0x001349b3... (32 %)
Writing at 0x00142207... (33 %)
Writing at 0x0014ad59... (34 %)
Writing at 0x001539a8... (35 %)
Writing at 0x0015cb7b... (36 %)
Writing at 0x00168915... (37 %)
Writing at 0x0017102d... (38 %)
Writing at 0x0017937f... (39 %)
Writing at 0x00180df3... (40 %)
Writing at 0x00189ea0... (40 %)
Writing at 0x00191a57... (41 %)
Writing at 0x0019a92e... (42 %)
Writing at 0x001a2fe3... (43 %)
Writing at 0x001abb82... (44 %)
Writing at 0x001b3bec... (45 %)
Writing at 0x001bb955... (46 %)
Writing at 0x001c3a85... (47 %)
Writing at 0x001c9c31... (48 %)
Writing at 0x001cf6a0... (49 %)
Writing at 0x001d4a65... (50 %)
Writing at 0x001d9e62... (50 %)
Writing at 0x001df11a... (51 %)
Writing at 0x001e44dc... (52 %)
Writing at 0x001e9c60... (53 %)
Writing at 0x001ef263... (54 %)
Writing at 0x001f4692... (55 %)
Writing at 0x001f982a... (56 %)
Writing at 0x001feb07... (57 %)
Writing at 0x00203f9b... (58 %)
Writing at 0x00208f11... (59 %)
Writing at 0x0020ddf0... (60 %)
Writing at 0x002132d6... (60 %)
Writing at 0x00219bb3... (61 %)
Writing at 0x0021f7c1... (62 %)
Writing at 0x00225856... (63 %)
Writing at 0x0022ac4d... (64 %)
Writing at 0x0022fcd4... (65 %)
Writing at 0x00235ae9... (66 %)
Writing at 0x0023bbc8... (67 %)
Writing at 0x00241365... (68 %)
Writing at 0x00246abe... (69 %)
Writing at 0x0024c34d... (70 %)
Writing at 0x00251f0b... (70 %)
Writing at 0x00257978... (71 %)
Writing at 0x0025cdb6... (72 %)
Writing at 0x002635e4... (73 %)
Writing at 0x00269091... (74 %)
Writing at 0x0026e62f... (75 %)
Writing at 0x002742a1... (76 %)
Writing at 0x00279e16... (77 %)
Writing at 0x0027f611... (78 %)
Writing at 0x00284718... (79 %)
Writing at 0x00289c87... (80 %)
Writing at 0x0028f1eb... (80 %)
Writing at 0x002946fb... (81 %)
Writing at 0x0029a056... (82 %)
Writing at 0x0029ef37... (83 %)
Writing at 0x002a3e71... (84 %)
Writing at 0x002a91fb... (85 %)
Writing at 0x002ae680... (86 %)
Writing at 0x002b384c... (87 %)
Writing at 0x002b89ac... (88 %)
Writing at 0x002be1d7... (89 %)
Writing at 0x002c3dc6... (90 %)
Writing at 0x002c8eb2... (90 %)
Writing at 0x002ce055... (91 %)
Writing at 0x002d35ff... (92 %)
Writing at 0x002d9521... (93 %)
Writing at 0x002dec8c... (94 %)
Writing at 0x002e4f2b... (95 %)
Writing at 0x002ea28f... (96 %)
Writing at 0x002ef84d... (97 %)
Writing at 0x002f4fac... (98 %)
Writing at 0x002fb008... (99 %)
Writing at 0x00301387... (100 %)
Wrote 3030864 bytes (1792765 compressed) at 0x00020000 in 18.1 seconds (effective 1339.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting with a watchdog...

===================
Waiting for device to boot into MicroPython...
=== Run flashed firmware ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" run
Output:
esptool.py v4.9.0
Serial port /dev/cu.usbmodem1101
Connecting...

A serial exception error occurred: Could not configure port: (6, 'Device not configured')
Note: This error originates from pySerial. It is likely not a problem with esptool, but with the hardware connection or drivers.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html

===================
Waiting for REPL port (attempt 1/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 2/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 3/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 4/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 5/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 6/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 7/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 8/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 9/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 10/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
REPL port not detected automatically; script will still attempt mpremote without explicit port.
Firmware flashed successfully.
Checking MicroPython REPL access…
=== Check REPL ===
Command: mpremote exec "print('OK')"
Output:
b''
Traceback (most recent call last):
  File "/opt/homebrew/bin/mpremote", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/main.py", line 569, in main
    handler_func(state, args)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/commands.py", line 448, in do_exec
    _do_execbuffer(state, args.expr[0], args.follow)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/commands.py", line 431, in _do_execbuffer
    state.ensure_raw_repl()
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/main.py", line 511, in ensure_raw_repl
    self.transport.enter_raw_repl(soft_reset=soft_reset)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/transport_serial.py", line 159, in enter_raw_repl
    raise TransportError("could not enter raw repl")
mpremote.transport.TransportError: could not enter raw repl

===================
============================================================
DEVICE MUST BE IN BOOTLOADER MODE!
============================================================
This script requires the device to be in bootloader mode.
We need to see: 303a:1001 Espressif USB JTAG/serial debug unit

To put the device in bootloader mode:
1. Locate the BOOT and EN (or RST) buttons on your MCT device
2. Hold down the BOOT button and keep it pressed
3. While holding BOOT, press and release the EN (or RST) button
4. Release the BOOT button
5. The device should now show as 303a:1001 in bootloader mode

After putting the device in bootloader mode, run this script again.
You can verify bootloader mode with: mpremote devs
============================================================
