Running load_mct.py
Installing required packages...
=== Install esptool ===
Command: pip install "git+https://github.com/espressif/esptool.git@a32988e2d5f02845ce16e22022f5b64368f12572#egg=esptool"
Output:
Collecting esptool
  Using cached esptool-4.8.1-py3-none-any.whl
Requirement already satisfied: bitstring!=4.2.0,>=3.1.6 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (4.3.1)
Requirement already satisfied: cryptography>=2.1.4 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (45.0.4)
Requirement already satisfied: ecdsa>=0.16.0 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (0.19.1)
Requirement already satisfied: pyserial>=3.3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (3.5)
Requirement already satisfied: reedsolo<1.8,>=1.5.3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (1.7.0)
Requirement already satisfied: PyYAML>=5.1 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (6.0.2)
Requirement already satisfied: intelhex in /opt/homebrew/lib/python3.11/site-packages (from esptool) (2.3.0)
Requirement already satisfied: argcomplete>=3 in /opt/homebrew/lib/python3.11/site-packages (from esptool) (3.6.2)
Requirement already satisfied: bitarray<4.0,>=3.0.0 in /opt/homebrew/lib/python3.11/site-packages (from bitstring!=4.2.0,>=3.1.6->esptool) (3.4.2)
Requirement already satisfied: cffi>=1.14 in /opt/homebrew/lib/python3.11/site-packages (from cryptography>=2.1.4->esptool) (1.17.1)
Requirement already satisfied: six>=1.9.0 in /opt/homebrew/lib/python3.11/site-packages (from ecdsa>=0.16.0->esptool) (1.17.0)
Requirement already satisfied: pycparser in /opt/homebrew/lib/python3.11/site-packages (from cffi>=1.14->cryptography>=2.1.4->esptool) (2.22)

[notice] A new release of pip is available: 25.0.1 -> 25.1.1
[notice] To update, run: python3.11 -m pip install --upgrade pip

===================
=== Install mpremote ===
Command: pip install mpremote
Output:
Requirement already satisfied: mpremote in /opt/homebrew/lib/python3.11/site-packages (1.25.0)
Requirement already satisfied: pyserial>=3.3 in /opt/homebrew/lib/python3.11/site-packages (from mpremote) (3.5)

[notice] A new release of pip is available: 25.0.1 -> 25.1.1
[notice] To update, run: python3.11 -m pip install --upgrade pip

===================
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
mpremote devs output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

Found Espressif device on port: /dev/cu.usbmodem1101
=== Get MAC Address ===
Command: esptool.py --port "/dev/cu.usbmodem1101" chip_id
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Detecting chip type... ESP32-S3
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Warning: ESP32-S3 has no Chip ID. Reading MAC instead.
MAC: d8:3b:da:4d:29:50
Hard resetting via RTS pin...

===================
Device MAC address: d8:3b:da:4d:29:50
Flashing firmware...
=== Erase Flash ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --baud 921600 --before default_reset --after hard_reset erase_flash
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Erasing flash (this may take a while)...
Chip erase completed successfully in 18.1 seconds.
Hard resetting via RTS pin...

===================
=== Write Flash ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m 0x0 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/bootloader.bin" 0x8000 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/partition-table.bin" 0x20000 "/Users/danielmcshan/GitHub/MCT/mod/MCC/firmware/micropython.bin"
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00004fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00020000 to 0x00302fff...
SHA digest in image updated
Compressed 19152 bytes to 12451...
Writing at 0x00000000... (100 %)
Wrote 19152 bytes (12451 compressed) at 0x00000000 in 0.2 seconds (effective 709.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 139...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (139 compressed) at 0x00008000 in 0.0 seconds (effective 585.4 kbit/s)...
Hash of data verified.
Compressed 3026624 bytes to 1790925...
Writing at 0x00020000... (0 %)
Writing at 0x0002a855... (1 %)
Writing at 0x000332ff... (2 %)
Writing at 0x0003b00a... (3 %)
Writing at 0x000407e0... (4 %)
Writing at 0x00049690... (5 %)
Writing at 0x00055e60... (6 %)
Writing at 0x00062c7f... (7 %)
Writing at 0x0006e3fe... (8 %)
Writing at 0x00079b7e... (9 %)
Writing at 0x00085e9f... (10 %)
Writing at 0x0008c91d... (10 %)
Writing at 0x00093879... (11 %)
Writing at 0x00099a69... (12 %)
Writing at 0x0009ffea... (13 %)
Writing at 0x000a59b9... (14 %)
Writing at 0x000ab1b1... (15 %)
Writing at 0x000b118b... (16 %)
Writing at 0x000b7ffb... (17 %)
Writing at 0x000bea59... (18 %)
Writing at 0x000c64d9... (19 %)
Writing at 0x000cd625... (20 %)
Writing at 0x000d424f... (20 %)
Writing at 0x000dacb3... (21 %)
Writing at 0x000e1271... (22 %)
Writing at 0x000e7a3a... (23 %)
Writing at 0x000ee640... (24 %)
Writing at 0x000f46b9... (25 %)
Writing at 0x000fc220... (26 %)
Writing at 0x001008e8... (27 %)
Writing at 0x00108ea5... (28 %)
Writing at 0x001132fa... (29 %)
Writing at 0x0011a693... (30 %)
Writing at 0x0011fcd8... (30 %)
Writing at 0x001282bd... (31 %)
Writing at 0x001331b9... (32 %)
Writing at 0x00140ccd... (33 %)
Writing at 0x0014a3a3... (34 %)
Writing at 0x00152dad... (35 %)
Writing at 0x0015bb71... (36 %)
Writing at 0x001676f4... (37 %)
Writing at 0x0017065a... (38 %)
Writing at 0x00178805... (39 %)
Writing at 0x00180130... (40 %)
Writing at 0x00189382... (40 %)
Writing at 0x00190edf... (41 %)
Writing at 0x00199f3a... (42 %)
Writing at 0x001a1e33... (43 %)
Writing at 0x001ab03c... (44 %)
Writing at 0x001b3008... (45 %)
Writing at 0x001bae3b... (46 %)
Writing at 0x001c2fd9... (47 %)
Writing at 0x001c9482... (48 %)
Writing at 0x001cef96... (49 %)
Writing at 0x001d4220... (50 %)
Writing at 0x001d9722... (50 %)
Writing at 0x001dea80... (51 %)
Writing at 0x001e3e63... (52 %)
Writing at 0x001e95ac... (53 %)
Writing at 0x001eeb8d... (54 %)
Writing at 0x001f3f77... (55 %)
Writing at 0x001f90dc... (56 %)
Writing at 0x001fe457... (57 %)
Writing at 0x00203850... (58 %)
Writing at 0x00208888... (59 %)
Writing at 0x0020d6c2... (60 %)
Writing at 0x00212b84... (60 %)
Writing at 0x0021953f... (61 %)
Writing at 0x0021ef93... (62 %)
Writing at 0x00224f1e... (63 %)
Writing at 0x0022a4f8... (64 %)
Writing at 0x0022f595... (65 %)
Writing at 0x002351d3... (66 %)
Writing at 0x0023b4c7... (67 %)
Writing at 0x00240aad... (68 %)
Writing at 0x002461f3... (69 %)
Writing at 0x0024bbcb... (70 %)
Writing at 0x0025169b... (70 %)
Writing at 0x002570f5... (71 %)
Writing at 0x0025c661... (72 %)
Writing at 0x00262d22... (73 %)
Writing at 0x0026886b... (74 %)
Writing at 0x0026df18... (75 %)
Writing at 0x002739ec... (76 %)
Writing at 0x0027968e... (77 %)
Writing at 0x0027ef39... (78 %)
Writing at 0x00284012... (79 %)
Writing at 0x0028950b... (80 %)
Writing at 0x0028e995... (80 %)
Writing at 0x00293ff4... (81 %)
Writing at 0x002997ed... (82 %)
Writing at 0x0029e82b... (83 %)
Writing at 0x002a3734... (84 %)
Writing at 0x002a8b24... (85 %)
Writing at 0x002adf3b... (86 %)
Writing at 0x002b30f9... (87 %)
Writing at 0x002b828f... (88 %)
Writing at 0x002bd853... (89 %)
Writing at 0x002c3645... (90 %)
Writing at 0x002c86eb... (90 %)
Writing at 0x002cd8c1... (91 %)
Writing at 0x002d2e99... (92 %)
Writing at 0x002d8bea... (93 %)
Writing at 0x002de58c... (94 %)
Writing at 0x002e4557... (95 %)
Writing at 0x002e9b74... (96 %)
Writing at 0x002eee49... (97 %)
Writing at 0x002f4918... (98 %)
Writing at 0x002fa9b4... (99 %)
Writing at 0x00300bb5... (100 %)
Wrote 3026624 bytes (1790925 compressed) at 0x00020000 in 20.7 seconds (effective 1167.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...

===================
Waiting for device to boot into MicroPython...
=== Run flashed firmware ===
Command: esptool.py --chip esp32s3 --port "/dev/cu.usbmodem1101" run
Output:
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: d8:3b:da:4d:29:50
Uploading stub...
Running stub...
Stub running...
Hard resetting via RTS pin...

===================
Waiting for REPL port (attempt 1/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 2/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 3/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 4/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 5/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 6/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 7/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 8/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 9/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
Waiting for REPL port (attempt 10/10)…
=== Check Device Info ===
Command: mpremote devs
Output:
/dev/cu.Bluetooth-Incoming-Port None 0000:0000 None None
/dev/cu.debug-console None 0000:0000 None None
/dev/cu.usbmodem1101 D8:3B:DA:4D:29:50 303a:1001 Espressif USB JTAG/serial debug unit

===================
REPL port not detected automatically; script will still attempt mpremote without explicit port.
Firmware flashed successfully.
Checking MicroPython REPL access…
=== Check REPL ===
Command: mpremote exec "print('OK')"
Output:
b''
Traceback (most recent call last):
  File "/opt/homebrew/bin/mpremote", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/main.py", line 569, in main
    handler_func(state, args)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/commands.py", line 448, in do_exec
    _do_execbuffer(state, args.expr[0], args.follow)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/commands.py", line 431, in _do_execbuffer
    state.ensure_raw_repl()
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/main.py", line 511, in ensure_raw_repl
    self.transport.enter_raw_repl(soft_reset=soft_reset)
  File "/opt/homebrew/lib/python3.11/site-packages/mpremote/transport_serial.py", line 159, in enter_raw_repl
    raise TransportError("could not enter raw repl")
mpremote.transport.TransportError: could not enter raw repl

===================
Failed to access MicroPython REPL.
